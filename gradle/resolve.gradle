rootProject {
    task resolve {
        doLast {
            println 'Resolving all project dependencies'
            allprojects.each { subProject ->
                println "Resolving ${subProject} dependencies"
                if (!subProject.projectDir.exists()) {
                    println "${subProject} projectDir does not yet exist, creating..."
                    subProject.projectDir.mkdirs()
                }
                subProject.buildscript.configurations.each { doResolve(it) }
                subProject.configurations.each { doResolve(it) }
            }
        }
    }
}

def doResolve(configuration) {
    // Configuration.isCanBeResolved() was add to gradle 3.3
    def isResolvable = configuration.metaClass.respondsTo(configuration, "isCanBeResolved") ?
        configuration.isCanBeResolved() : true

    if (isResolvable) {
        logger.debug('Resolving {}', configuration)
        configuration.resolve()
    }
}
